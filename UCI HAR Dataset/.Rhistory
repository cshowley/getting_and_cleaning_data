for (i in c(10,20,30,100)) {
print nchar(htmlCode[i])
}
for (i in c(10,20,30,100)) {
print nchar(htmlCode[i])
}
nchar(htmlCode[10])
nchar(htmlCode[20])
nchar(htmlCode[30])
nchar(htmlCode[100])
url <- "https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for"
download.file(url,'test.for')
x<-read.for('test.for')
ls()
x<-read.data('test.for')
x<-read.fwf('test.for')
x<-read.fwf('getdata%2Fwksst8110.for')
x<-read.fwf('getdata%2Fwksst8110.for',widths=10)
x
names(x)
x<-read.fwf('getdata%2Fwksst8110.for',widths=5)
x
names(x)
x<-read.fwf('getdata%2Fwksst8110.for',widths=500)
x
names(x)
x<-read.fwf('getdata%2Fwksst8110.for',widths=500,sep='\t')
x
names(x)
x
x$V1
x<-read.fwf('getdata%2Fwksst8110.for',widths=500,sep='\t',col.names=c('date','v1','v2','v3','v4'))
x<-read.fwf('getdata%2Fwksst8110.for',widths=500,sep='\t',col.names=c('date','v1','v2','v3'))
x<-read.fwf('getdata%2Fwksst8110.for',widths=500,sep='\t',header=TRUE)
x
names(x)
x<-read.fwf('getdata%2Fwksst8110.for',widths=500,sep='\t',header=TRUE)
x
names(x)
x
x<-read.fwf('getdata%2Fwksst8110.for',widths=5000,sep='\t',header=TRUE)
x<-read.fwf('getdata%2Fwksst8110.for',widths=50,sep='\t',header=TRUE)
x
names(x)
power.prop.test(p1=.01236, p2=.02989, sig.level=0.05, power=0.8, alternative="one.sided")
power.prop.test(p1=.01236, p2=.02989, sig.level=0.0167, power=0.8, alternative="one.sided")
library(swirl)
swirl()
swirl()
swirl()
swirl()
install_from_swirl("Getting and Cleaning Data")
swirl()
quit()
library(swirl)
swirl()
mydf <- read.csv(path2csv, stringsAsFactors=FALSE)
dim(mydf)
head(mydf)
library(dplyr)
packageVersion("dplyr")
cran <- tbl_df(mydf)
rm("mydf")
cran
?select
select(cran, ip_id, package, country)
5:20
select(cran, r_arch:country)
select(cran, country:r_arch)
cran
select(cran, -time)
-5:20
-(5:20)
select(cran, -(X:size))
filter(cran, package == "swirl")
filter(cran, r_version == '3.1.1', country == 'US')
?Comparison
filter(cran, r_version <= '3.0.2', country == 'IN')
filter(cran, r_version <= '3.0.2', country == 'IN' | country == )
filter(cran, r_version <= '3.0.2', country == 'IN' | country == 'US')
filter(cran, r_version <= '3.0.2', country == 'US' | country == 'IN')
filter(cran, country == 'US' | country == 'IN')
filter(cran, size > 100500 & r_os == 'linux_gnu')
filter(cran, size > 100500, r_os == 'linux_gnu')
filter(cran, size > 100500 AND r_os == 'linux_gnu')
filter(cran, size > 100500 & r_os == 'linux-gnu')
filter(cran, size > 100500, r_os == 'linux-gnu')
is.na(c(3,5,NA,10))
!is.na(c(3,5,NA,10))
filter(cran, !is.na(r_version))
cran2 <- select(cran, size:ip_id)
arrange(cra2, ip_id)
arrange(cran2, ip_id)
arrange(cran2, desc(ip_id))
arrange(cran2, package, ip_id)
arrange(cran2, country, desc(r_version), ip_id)
cran3 <- select(ip_id, package, size)
cran3 <- select(cran, ip_id, package, size)
cran3
mutate(cran3, size_mb = size/2^20)
mutate(cran3, size_mb = size/2^20, size_gb = size_mb/2^10)
mutate(cran3, correct_size = size/1000)
mutate(cran3, correct_size = size+1000)
summarize(cran, avg_bytes=mean(size))
q()
library(swirl)
swirl()
library(dplyr)
cran <- tbl_df(mydf)
rm('mydf')
cran
?group_by
by_package <- group_by(cran, package)
by_package
?summarize
summarize(by_package,size)
summarize(by_package)
summarize(by_package,mean(size))
submit()
pack_sum
quantile(pack_sum$count, probs=.99)
filter(pack_sum, count > 679)
top_counts <- filter(pack_sum, count > 679)
top_counts
View(top_counts())
View(top_counts)
?arrange
top_counts_sorted <- arrange(top_counts, desc(counts))
top_counts_sorted <- arrange(top_counts, desc(count))
View(top_counts_sorted)
quantile(pack_sum$unique, probs=0.99)
top_unique <- filter(pack_sum, unique > 465)
View(top_unique)
top_unique_sorted <- arrange(top_unique, desc(unique))
View(top_unique_sorted)
submit()
submit()
submit()
View(results3)
View(result3)
submit()
?select
submit()
submit()
?mutate
submit()
submit()
submit()
submit()
submit()
submit()
library(tidyr)
students
?gather
gather(students, sex, count, -grade)
students2
res <- gather(students2, sex_class, count)
res <- gather(students2, sex_class, count, -grade)
res
?separate
separate(res, sex_class, c('sex','class'))
names(students2)
submit
submit()
students3
submit()
?spread
names(students3)
?spread
submit()
submit()
submit()
submit()
submit()
submit()
submit()
submit()
submit()
submit()
library(readr)
parse_numeric('class5')
submit()
students4
submit()
submit()
submit()
passed
failed
passed <- mutate(status='passed')
passed <- mutate(passed, status='passed')
failed <- mutate(failed, status='failed')
bind_rows(passed,failed)
sat
?select
?separate
submit()
submit()
df <- download.file('https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv')
?download.file
download.file(url='https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv','q1.csv')
df <- read.csv('q1.csv')
names(df)
head(df$RT)
df$RT.head
df$RT.head()
df$RT
df$ACR
tmp <- df$ACR>3
tmp <- df$ACR>=3
tmp
tmp(!is.na(tmp))
!is.na(tmp)
tmp <- df$ACR>=3 && df$AGS>=6
tmp
tmp1 <- df$ACR>=3
tmp2 <- df$AGS>=6
tmp2
tmp1+tmp2
agricultureLogical <- tmp1+tmp2
?which
agricultureLogical <- subset(df, df$ACR=3 & df$AGS=6)
agricultureLogical <- subset(df, df$ACR==3 & df$AGS==6)
agricultureLogical
agricultureLogical <- (df$ACR==3 & df$AGS=6)
agricultureLogical <- (df$ACR==3 & df$AGS==6)
which(agricultureLogical)
library(jpeg)
install.packages('jpeg')
library(jpeg)
?jpeg
image <- jpeg('https://d396qusza40orc.cloudfront.net/getdata%2Fjeff.jpg')
download.file('https://d396qusza40orc.cloudfront.net/getdata%2Fjeff.jpg','image.jpeg')
image <- jpeg('image.jpeg')
?jpeg
image <- jpeg('image.jpeg',native=TRUE)
image <- jpeg('image.jpeg')
quantile(image,30)
quantile(image,.30)
?readJPEG
image <- readJPEG('image.jpeg',native=TRUE)
quantile(image,.30)
quantile(image,.85)
quantile(image,.8)
download.file('https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv', 'GDP.csv')
download.file('https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FEDSTATS_Country.csv', 'ed.csv')
gdp <- read.csv('GDP.csv')
ed <- read.csv('ed.csv')
names(gdp)
names(ed)
head(ed$Short.Name)
head(gdp)
head(gdp,10)
head(ed)
library(dplyr)
?dplyr
?mutate
tmp <- inner_join(gdp$X, ed$CountryCode)
tmp <- inner_join(gdp, ed, by=('X'='CountryCode'))
tmp <- inner_join(gdp, ed, by=c('X'='CountryCode'))
tmp
names(tmp)
head(tmp$X)
head(tmp$CountryCode)
head(tmp$Long.Name)
tmp
?sort
?arrange
names(tmp)
head(tmp$Gross.domestic.product.2012)
arrange(desc(Gross.domestic.product.2012))
arrange(desc(tmp$Gross.domestic.product.2012))
tmp
library(swirl)
swirl()
mydf <- read.csv(path2csv, stringsAsFactors = FALSE)
dim(mydf)
head(mydf)
library(dplyr)
packageVersion('dply')
packageVersion('dplyr')
cran <- tbl_df(mydf)
rm('mydf')
cran
?select
select(cran, ip_id, package, country)
5:20
select(cran, r_arch:country)
select(cran, country:r_arch)
cran
select(cran, -time)
-5:20
-(5:20)
select(cran, -(X:size))
filter(cra, package == 'swirl')
filter(cran, package == 'swirl')
filter(cran, r_version == '3.1.1', country='US')
filter(cran, r_version == '3.1.1', country=='US')
?Comparison
filter(cran, r_version <= '3.0.2', country=='IN')
filter(cran, country == 'US' | country=='IN')
filter(cran, size>100500, r_os=='linux-gnu')
is.na(c(3,5,NA,10))
!is.na(c(3,5,NA,10))
filter(cran, !is.na(r_version))
cran2 <- select(cran, size:ip_id)
arrange(cran2, ip_id)
arrange(cran2, desc(ip_id))
arrange(cran2, package, ip_id)
arrange(cran2, country, desc(r_version), ip_id)
cran3 <- select(cran, ip_id, package, size)
cran3
mutate(cran3, size_mb = size/2^20)
mutate(cran3, size_mb = size/2^20, size_gb = size_mb/2^10)
mutate(cran3, correct_size=size+1000)
summaryize(cran, avg_bytes=mean(size))
summarize(cran, avg_bytes=mean(size))
tmp
tmp2 <- tbl_df(tmp)
tmp2
arrange(tmp2, desc(X))
getwd()
gdp <- read.csv('GDP.csv')
ed <- read.csv('ed.csv')
tmp <- inner_join(gdp,ed,by=(c(gdp$X,ed$CountryCode)))
tmp <- inner_join(gdp, ed, by=c('X'='CountryCode'))
tmp2 <- tbl_df(tmp)
tmp2
select(tmp2, X)
arrange(tmp2, desc(Gross.domestic.product.2012))
x<-arrange(tmp2, desc(Gross.domestic.product.2012))
x
x[13]
head(x)
head(x,13)
head(x,15)
write.csv(tmp,'test.csv')
select(tmp2, Income.Group='High Income:OECD')
select(tmp2, Income.Group='High Income: OECD')
?select
filter(tmp2, Income.Group='High Income: OECD')
filter(tmp2, Income.Group=='High Income: OECD')
filter(tmp2, Income.Group=='High income: OECD')
summarize(filter(tmp2, Income.Group=='High income:OECD'), mean(Gross.domestic.product.2012))
swirl()
Sys.getlocale('LC_TIME')
library(lubridate)
help(package=lubridate)
this_day = today()
this_day <- today()
this_day
month(this_day)
wday(this_day)
wday(this_day, TRUE)
this_moment <- now()
this_moment
second(this_moment)
my_date <- ymd('1989-05-17')
my_date
class(my_date)
ymd('1989 May 17')
mdy('March 12, 1975')
dmy(25081985)
ymd('192012')
ymd('1-9-2012')
mdy('1-9-2012')
mdy('1920-1-2')
ymd('1920-1-2')
dt1
ymd_hms(dt1)
hms('03:22:14')
dt2
lappy(ymd,dt2)
lapply(ymd,dt2)
ymd(dt2)
update(this_moment, hours=8, minutes=34, seconds=55)
this_moment
this_moment <- update(this_moment, hours=14, minutes=12)
this_moment
nyc <- now(timezone='America/New_York')
?now
nyc <- now(tzone='America/New_York')
nyc
depart <- nyc + days(2)
depart
depart <- update(depart, hours = hours(depart)+hours(17), minutes = minutes(depart)+minutes(17))
minutes(depart)
depart
depart <- update(depart, hours = 17, minutes = 17)
depart <- update(depart, hours = 17, minutes = 34)
depart
arrive <- depart + hours(15)
arrive <- depart + hours(15) + minutes(50)
?with_tz
with_tz(arrive, tzone='Asia/Hong_Kong')
arrive <- with_tz(arrive, tzone='Asia/Hong_Kong')
arrive
last_time <- mdy('June 17, 2008', tz='Singapore')
last_time
?interval
how_long <- interval(last_time, arrive)
as.period(how_long)
stopwatch()
download.file('https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv', 'q1.csv')
df <- read.csv('q1.csv')
lapply(df$wgtp,strsplit)
?lapply
df$wgtp1
df$wgtp
names(df)
lapply(names(df), strsplit)
lapply(names(df), strsplit())
strsplit(names(df))
?strsplit
strsplit('wgtp15')
strsplit('wgtp15','')
strsplit(names(df), split='wgtp')
strsplit(names(df), split='wgtp')[123]
download.file('https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv','q2.csv')
df <- read.csv('q2.csv')
names(df)
head(df$Gross.domestic.product.2012)
head(df)
df <- read.csv('q2.csv',skip=4)
df
head(df)
?gsub
mean(gsub(df$X.4))
mean(gsub(',','',df$X.4))
vec <- df$X.4[1:190]
vec
mean(gsub(',','',vec))
gsub(',','',vec)
gsub(',','',vec).asnumeric()
gsub(',','',vec).asnumeric
numeric(gsub(',','',vec))
numeric(' 40 ')
(' 40 ').asnumeric
as.numeric(' 40 ')
as.numeric(gsub(',','',vec))
mean(as.numeric(gsub(',','',vec)))
grep('^United',df$X.3),3
grep('^United',df$X.3)
df <- read.csv('test.csv')
df$Special.Notes
grep('^Fiscal year end','June')
?grep
grep('^Fiscal year end','Fiscal year end: March 31; reporting period for national accounts data: FY.')
grep('^Fiscal year end',df$Special.Notes)
grep('^Fiscal year end: June',df$Special.Notes)
length(grep('^Fiscal year end: June',df$Special.Notes))
library(quantmod)
install.packages('quantmod')
library(quantmod)
amzn = getSymbols('AMZN',auto.assign=FALSE)
sampleTimes=index(amzn)
sampleTimes
ymd(sampleTimes[1])
day(sampleTimes[1])
ymd(sampleTimes)
sum(years(sampleTimes)==2012)
years(sampleTimes)
year(sampleTimes)
sum(year(sampleTimes)==2012)
sum(year(sampleTimes)==2012 & day(sampleTimes)==1)
sum(year(sampleTimes)==2012 & day(sampleTimes)==2)
sum(year(sampleTimes)==2012 & day(sampleTimes)==3)
sum(year(sampleTimes)==2012 & day(sampleTimes)==4)
sampleTimes
setwd('GitHub/Getting and Cleaning Data course project/')
getwd()
setwd('UCI HAR Dataset/test')
df <- read.table('feature_info.txt')
setwd('~/GitHub/Getting and Cleaning Data course project/UCI HAR Dataset/')
df <- read.table('feature_info.txt')
ls()
list.files
list.files()
df <- read.table('features_info.txt')
?read.table
df <- read.table('features_info.txt',sep=' ')
df <- read.table('features.txt',sep=' ')
names(df)
df$V2[0]
df$V2
df$V2[1]
df$V2[2]
grep('mean()',df$V2)
grep('std()',df$V2)
grep('^mean()$',df$V2)
grep("^mean()$",df$V2)
grep("mean()",df$V2)
grep("tBodyAcc-mean()-X",df$V2)
grep("tBodyAcc-mean()-X",df$V2)
grep("mean()",df$V2)
grep("mean()$",df$V2)
grep("X$",df$V2)
grep("^mean()$",df$V2,value=TRUE)
?grep
grep("mean()",df$V2,fixed=TRUE)
X_train <- read.table('UCI HAR Dataset/train/X_train.txt', sep=' ')
getwd()
X_train <- read.table('train/X_train.txt', sep=' ')
subject_train <- read.csv('train/subject_train.txt', sep=' ')
head(subject_train)
X_train <- read.table('train/X_train.txt', sep=' ', skip=1)
X_train <- read.table('train/X_train.txt', sep=' ', skip=2)
X_train <- read.table('test/X_test.txt', sep=' ')
X_train <- read.table('test/X_test.txt', sep=' ', skip=1)
X_train <- read.table('test/X_test.txt', sep=' ', skip=10)
X_train <- read.table('test/X_test.txt', sep='\t')
names(X_train)
X_train$V1
